/* Projeto pr√°tico
üè™ 7. Sistema de Loja (Projeto Final)
Montar um m√≥dulo completo combinando tudo:
Factory Function ‚Üí cria produtos (nome, pre√ßo, estoque);
Prototype ‚Üí adiciona m√©todos como vender(qtd) e repor(qtd);
Module Pattern + IIFE ‚Üí controla a lista de produtos e mant√©m os dados privados;
M√©todos p√∫blicos: adicionarProduto, listarProdutos, venderProduto(nome, qtd).
üí° Usar forEach para exibir o estoque e find para localizar produtos pelo nome. */

// Construtora de objeto
function Produto(nome, preco, qtdEstoque) {
    this.nome = nome
    this.preco = preco
    this.qtdEstoque = qtdEstoque
    console.log(`Produto "${this.nome}" adicionado ao estoque`)
    console.log(`Pre√ßo: ${this.preco}`)
    console.log(`Quantidade adicionada ao estoque: ${this.qtdEstoque}`)
    console.log("=".repeat(40))
}
// M√©todos do prot√≥tipo
Produto.prototype.vender = function(qtdVendida) {
    if (this.qtdEstoque >= qtdVendida) {
        this.qtdEstoque -= qtdVendida
        console.log(`Produto vendido: ${this.nome}`)
        console.log(`Quantidade vendida: ${qtdVendida}`)
        console.log(`Total da compra: R$${qtdVendida * this.preco} reais`)

    } else {
        console.log("Quantidade excede o que existe no estoque")
    }
}
Produto.prototype.repor = function(qtdReposta) {
    this.qtdEstoque += qtdReposta
    console.log(`Quantida resposta no estoque: ${qtdReposta}`)
    console.log(`Quantidade atual em estoque: ${this.qtdEstoque} `)
}

//M√≥dulo:
let moduloEstoque = (function() {
    let listaProdutos = []

    function addProduto(parametroProduto, parametroPreco, parametroQtdEstoque) {
        let produto = new Produto(parametroProduto, parametroPreco, parametroQtdEstoque)
        listaProdutos.push(produto)
    }

    function venderProdutos(parametroProduto, parametroQtdVendida) {
        let produtoEncontrado = listaProdutos.find(p => p.nome === parametroProduto)
        if (produtoEncontrado) {
            produtoEncontrado.vender(parametroQtdVendida) // Chama o m√©todo "vender" de prot√≥tipo se o "produtoEncontrado" existir
            if (produtoEncontrado.qtdEstoque = parametroQtdVendida) { // Se a qtd em estoque acabar, o produto √© removido da lista
                listaProdutos = listaProdutos.filter(p => p != produtoEncontrado)
                console.log(`Qtd de "${produtoEncontrado.nome}" foi zerada.  O produto acabou!"`)
            }
        } else {
            console.log(`Produto "${parametroProduto}" n√£o se encontra no estoque no momento`)
        }
    }

    function listarProdutos() {
        listaProdutos.forEach(produto => {
            console.log(`Produto: ${produto.nome}. Pre√ßo: ${produto.preco}. Quantidade em estoque: ${produto.qtdEstoque}`)
        })
    }
    return {
        addProduto,
        listarProdutos,
        venderProdutos
    }
})()

/* Criando uma vari√°vel sem usar o m√≥dulo 
const p1 = new Produto("L√°pis", 10.50, 10)
p1.vender(9)
p1.repor(20) */

// Usando o m√≥dulo e suas fun√ß√µes
const p1 = moduloEstoque.addProduto("L√°pis", 10.50, 10)
const p2 = moduloEstoque.addProduto("Computador", 1510, 300)
moduloEstoque.venderProdutos("L√°pis", 10)
moduloEstoque.listarProdutos()