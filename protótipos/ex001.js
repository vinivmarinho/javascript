/* Exerc√≠cio 1: Cadastro de Produtos
Crie uma fun√ß√£o construtora Produto que receba nome, preco e estoque.
Adicione um m√©todo no prot√≥tipo chamado aplicarDesconto(percentual)
‚Üí Ele deve reduzir o pre√ßo com base na porcentagem informada.
Crie 2 produtos e teste o m√©todo.
Esse tipo de l√≥gica √© muito usada em e-commerces ou sistemas de gest√£o. */

// Fun√ß√£o construtora
function Produto(nome, preco, qtdEstoque) {
    this.nome = nome,
    this.preco = preco,
    this.qtdEstoque = qtdEstoque
}
// Adicionando m√©todo ao prot√≥tipo de "Produto"
Produto.prototype.aplicarDesconto = function(percentualDesconto) {
    // Calcula o pre√ßo final com desconto
    let precoFinal = this.preco * (1-percentualDesconto/100)
    console.log(`O produto "${this.nome}" com ${percentualDesconto}% de desconto sai por R$${precoFinal.toFixed(2)} reais `)
}
// Criando dois produtos:
let p1 = new Produto("Computador", 250, 1)
let p2 = new Produto("PC gamer", 6500, 4)
// Testando o m√©todo
p1.aplicarDesconto(15)
// Retornando o prot√≥tipo dos objetos criados
console.log(Object.getPrototypeOf(p1))
console.log(Object.getPrototypeOf(p2))


/* Exerc√≠cio 2: Controle de Funcion√°rios
Crie uma fun√ß√£o construtora Funcionario(nome, cargo, salario)
No prot√≥tipo, adicione um m√©todo aumentarSalario(percentual) que aumenta o sal√°rio do funcion√°rio.
Crie dois funcion√°rios e aplique aumentos diferentes.
Mostre o sal√°rio antes e depois.
üíº Isso simula um sistema de RH simples */

// Fun√ß√£o construtora
function Funcionario(nome, cargo, salario) {
    this.nome = nome,
    this.cargo = cargo,
    this.salario = salario
    console.log(`Ol√°, ${this.nome}! Seja muito bem vindo a nossa empresa!`)
}
// Adiciona m√©todo no prototype 
Funcionario.prototype.aumentarSalario = function(novoSalario) {
    this.salario += novoSalario
    console.log(`Parab√©ns, ${this.nome}! Voc√™ recebeu um aumento de R$${novoSalario.toFixed(2)} reais, seu novo sal√°rio √© de R$${this.salario.toFixed(2)} reais`)
}
let f1 = new Funcionario("Vin√≠cius", "Professor", 2500)
let f2 = new Funcionario("Isabelly", "Engenheira", 8900)
f1.aumentarSalario(1000)
f2.aumentarSalario(5678.90)